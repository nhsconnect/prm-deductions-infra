format_version: 4
common:
  deploy_job: &deploy_job
    artifacts:
      - build:
          source: notification-lambda/build/alarm.zip
          destination: notification-lambda/build/
      - build:
          source: generate-cost-report-lambda/build/generate-cost-report-lambda.zip
          destination: generate-cost-report-lambda/build/
      - build:
          source: ehr-hard-deletion-lambda/build/ehr-hard-deletion-lambda.zip
          destination: ehr-hard-deletion-lambda/build/
    resources:
      - docker
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks create_secrets
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks generate_vpn_server_crt
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan_certs create
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan create
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply_certs
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply

pipelines:
  "prm-deductions-infra-cross-account":
    group: shared-components
    label_template: "${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - key-rotation-and-generation/**/*.*
    stages:
      - deploy_ci:
          clean_workspace: true
          resources:
            - docker
          environment_variables:
            NHS_ENVIRONMENT: ci
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_plan_cross_account create
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_apply_cross_account
      - deploy_dev:
          clean_workspace: true
          resources:
            - docker
          environment_variables:
            NHS_ENVIRONMENT: dev
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_plan_cross_account create
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_apply_cross_account

      - deploy_test:
          clean_workspace: true
          resources:
            - docker
          environment_variables:
            NHS_ENVIRONMENT: test
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_plan_cross_account create
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_apply_cross_account

      - deploy_perf:
          clean_workspace: true
          resources:
            - docker
          environment_variables:
            NHS_ENVIRONMENT: perf
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_plan_cross_account create
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_apply_cross_account

      - deploy_pre_prod:
          clean_workspace: true
          resources:
            - docker
          environment_variables:
            NHS_ENVIRONMENT: pre-prod
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_plan_cross_account create
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks tf_apply_cross_account
      - plan_prod:
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: prod
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: terraform-cross-account/nhs_deployment_cross_account.tfplan
                    destination: terraform-cross-account/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_plan_cross_account create
      - deploy_prod:
          approval:
            type: manual
            allow_only_on_success: true
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: prod
          jobs:
            deploy:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: terraform-cross-account/nhs_deployment_cross_account.tfplan
                    destination: terraform-cross-account/
                    is_file: yes
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_apply_cross_account

  "prm-deductions-infra":
    group: shared-components
    label_template: "${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - key-rotation-and-generation/**/*.*
    stages:
      - plan_dev:
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: dev
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: notification-lambda/build/alarm.zip
                    destination: notification-lambda/build/
                - build:
                    source: generate-cost-report-lambda/build/generate-cost-report-lambda.zip
                    destination: generate-cost-report-lambda/build/
                - build:
                    source: ehr-hard-deletion-lambda/build/ehr-hard-deletion-lambda.zip
                    destination: ehr-hard-deletion-lambda/build/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_plan create
      - deploy_dev:
          approval:
            type: manual
            allow_only_on_success: true
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: dev
          jobs:
            apply: *deploy_job
      - deploy_test:
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: test
          jobs:
            apply: *deploy_job
      - deploy_perf:
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: perf
          jobs:
            apply: *deploy_job
      - deploy_pre_prod:
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: pre-prod
          jobs:
            apply: *deploy_job
      - plan_prod:
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: prod
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: terraform/deployment.tfplan
                    destination: terraform/
                - build:
                    source: terraform/certs_deployment.tfplan
                    destination: terraform/
                - build:
                    source: notification-lambda/build/alarm.zip
                    destination: notification-lambda/build/
                - build:
                    source: generate-cost-report-lambda/build/generate-cost-report-lambda.zip
                    destination: generate-cost-report-lambda/build/
                - build:
                    source: ehr-hard-deletion-lambda/build/ehr-hard-deletion-lambda.zip
                    destination: ehr-hard-deletion-lambda/build/
                - build:
                    source: dynamo-migration-lambda/build/dynamo-migration-lambda.zip
                    destination: dynamo-migration-lambda/build/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks create_secrets
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks generate_vpn_server_crt
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_plan_certs create
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_plan create
      - deploy_prod:
          approval:
            type: manual
            allow_only_on_success: true
          clean_workspace: true
          environment_variables:
            NHS_ENVIRONMENT: prod
          jobs:
            deploy:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: terraform/certs_deployment.tfplan
                    destination: terraform/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: terraform/deployment.tfplan
                    destination: terraform/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: notification-lambda/build/alarm.zip
                    destination: notification-lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: generate-cost-report-lambda/build/generate-cost-report-lambda.zip
                    destination: generate-cost-report-lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: ehr-hard-deletion-lambda/build/ehr-hard-deletion-lambda.zip
                    destination: ehr-hard-deletion-lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: dynamo-migration-lambda/build/dynamo-migration-lambda.zip
                    destination: dynamo-migration-lambda/build/
                    is_file: yes
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_apply_certs
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks tf_apply
