resource "aws_instance" "vpn" {
  ami                             = data.aws_ami.amazon-linux-2.id
  instance_type                   = "t2.micro"
  source_dest_check               = false
  vpc_security_group_ids          = [aws_security_group.vpn-sg.id]
  subnet_id                       = aws_subnet.opentest_private.id
  key_name                        = aws_key_pair.mhs-key.key_name

  user_data            = data.template_file.userdata.rendered
  iam_instance_profile = aws_iam_instance_profile.vpn-profile.name

  tags = {
    Name = "${var.environment}-${var.cluster_name}-vpn-gateway"
    CreatedBy = var.repo_name
    Environment = var.environment
  }

  depends_on = [aws_iam_role_policy_attachment.role-attachment]
}

data "template_file" "userdata" {
  template = "${file("${path.module}/templates/userdata.tpl")}"

  vars = {
    OPENTEST_ASSETS_BUCKET = var.opentest-assets-bucket
    CLUSTER_NAME = var.cluster_name
    MHS_INBOUND_DOMAIN_NAME = local.mhs_inbound_domain_name
  }
}

resource "aws_iam_instance_profile" "vpn-profile" {
  name = "${var.environment}-${var.cluster_name}-vpn-gateway"
  role = aws_iam_role.vpn-gateway.name
}

data "aws_iam_policy_document" "vpn-client-config" {
  statement {
    actions = [
      "s3:GetObject",
      "s3:GetObjectVersion"
    ]

    resources = [
      "arn:aws:s3:::${var.opentest-assets-bucket}",
      "arn:aws:s3:::${var.opentest-assets-bucket}/*"
    ]
  }
}

resource "aws_iam_policy" "vpn-client-config" {
  name   = "${var.environment}-${var.cluster_name}-vpn-client-config"
  policy = data.aws_iam_policy_document.vpn-client-config.json
}

resource "aws_iam_role" "vpn-gateway" {
  name               = "${var.environment}-${var.cluster_name}-vpn-gateway"
  tags = {
    CreatedBy = var.repo_name
    Environment = var.environment
  }
  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "role-attachment" {
  role       = aws_iam_role.vpn-gateway.name
  policy_arn = aws_iam_policy.vpn-client-config.arn
}

locals {
  mhs_inbound_domain_name = var.cluster_name == "repo" ? "mhs-inbound-dev-opentest.mhs.patient-deductions.nhs.uk" : "mhs-inbound-dev-opentest.test-harness-mhs.patient-deductions.nhs.uk"
}